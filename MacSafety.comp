component MacSafety "manage safety interlocks, and display signal tower";

pin out bit InterlockOut "true when machine is safe";
pin out bit DoorUnlockOut "True when machine is safe to open, and door button pressed";
pin out bit SignalTowerRed "Signal Tower RED output";
pin out bit SignalTowerAmber "Signal Tower Amber output";
pin out bit SignalTowerGreen "Signal Tower Green output";
pin out bit SignalTowerWhite "Signal Tower WHite output";
pin out bit SignalTowerBlue "Signal Tower Blue output";
pin out bit SignalTowerBuzzer "Signal Tower Buzzer output";
pin in bit ProgPausedIn "halui.program.is-paused connection";
pin in bit ProgRunningIn "halui.program.is-running connection";
pin in bit ProgIdleIn "halui.program.is-idle connection";
pin in bit DoorInterlockIn "input from door interlock, true when safe";
pin in bit DoorUnlockButtonIn "input from door unlock button";
pin in bit EstopIn "input from ESTOP";
pin in bit LaserMode "input from laser mode switch";
pin in bit ManualChangeWaiting "Waiting for manual tool change";
pin in bit LaserActive "Laser is ACTIVE LED";
pin in bit ATCairGood "ATC Air is Good";
function _;
license "GPL";
author "Travis Farmer";
;;

FUNCTION(_) {
    // InterlockOut and DoorUnlockOut proc
    if (ProgRunningIn == true && DoorInterlockIn == true && ProgPausedIn == false && LaserMode == true) {
        InterlockOut = true;
    } else if (ProgPausedIn == true || ProgIdleIn == true) {
        InterlockOut = false;
        if (DoorUnlockButtonIn == true) {DoorUnlockOut = true;}
        else {DoorUnlockOut = false;}
    } else if (ProgRunningIn == true && DoorInterlockIn == false && ProgPausedIn == false && LaserMode == true) {
        InterlockOut = false;
    }
    // status LED Tower - red, amber, green, blue, white, buzzer
    if (EstopIn == true) {
        SignalTowerGreen = false;
        SignalTowerAmber = false;
        SignalTowerRed = true;
        SignalTowerBuzzer = true;
    } else if (ProgPausedIn == true || ATCairGood == false) {
        SignalTowerGreen = false;
        SignalTowerAmber = true;
        SignalTowerRed = false;
        SignalTowerBuzzer = false;
    } else if (ProgRunningIn == true) {
        SignalTowerGreen = true;
        SignalTowerAmber = false;
        SignalTowerRed = false;
        SignalTowerBuzzer = false;
    } else {
        SignalTowerGreen = false;
        SignalTowerAmber = false;
        SignalTowerRed = false;
        SignalTowerBuzzer = false;
    }
    if (LaserActive == true) {
        SignalTowerWhite = true;
    } else {
        SignalTowerWhite = false;
    }
    if (ManualChangeWaiting == true) {
        SignalTowerBlue = true;
    } else {
        SignalTowerBlue = false;
    }
}
