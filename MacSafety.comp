component MacSafety "manage safety interlocks, and display signal tower";

pin out bit InterlockOut "true when machine is safe";
pin out bit SigRed "Red signal output";
pin out bit SigYellow "Yellow signal output";
pin out bit SigGreen "Green signal output";
pin out bit SigBlue "Blue signal output";
pin out bit SigWhite "White signal output";
pin out bit SigBuzzer "Buzzer signal output";
pin out bit DoorUnlockOut "True when machine is safe to open, and door button pressed";
pin out bit SendEstop "true when sending ESTOP";
pin in bit ProgPausedIn "halui.program.is-paused connection";
pin in bit ProgRunningIn "halui.program.is-running connection";
pin in bit ProgIdleIn "halui.program.is-idle connection";
pin in bit DoorInterlockIn "input from door interlock, true when safe";
pin in bit DoorUnlockButtonIn "input from door unlock button";
pin in bit LaserRunningIn "input from laser enable";
pin in bit EstopIn "input from ESTOP";
pin in bit TrigEstop "alternate ESTOP trigger";

function _;
license "GPL";
author "Travis Farmer";
;;

FUNCTION(_) {
    // InterlockOut and DoorUnlockOut proc
    if (ProgRunningIn == true && DoorInterlockIn == true && ProgPausedIn == false && EstopIn == false) {
        InterlockOut = true;
        if (DoorUnlockButtonIn == true) {SigBuzzer = true;}
        else {SigBuzzer = false;}
        SendEstop = true;
    } else if (ProgPausedIn == true || ProgIdleIn == true && EstopIn == false) {
        InterlockOut = false;
        SigBuzzer = false;
        if (DoorUnlockButtonIn == true) {DoorUnlockOut = true;}
        else {DoorUnlockOut = false;}
        SendEstop = true;
    } else if ((ProgRunningIn == true && DoorInterlockIn == false && ProgPausedIn == false && EstopIn == false) || TrigEstop == false) {
        InterlockOut = false;
        SigBuzzer = true;
        SendEstop = false;
    }

    // Signal Lights Proc
    if (ProgRunningIn == true && ProgPausedIn == false && LaserRunningIn == false && EstopIn == false) {
        SigRed = false;
	SigYellow = true;
	SigGreen = false;
        SigWhite = true;
        SigBlue = false;
    } else if (ProgPausedIn == true && DoorInterlockIn == false && EstopIn == false) {
        SigRed = false;
        SigYellow = true;
        SigGreen = false;
        SigWhite = false;
        SigBlue = false;
    } else if (ProgRunningIn == false && ProgIdleIn == true && EstopIn == false) {
        SigRed = false;
        SigYellow = true;
        SigGreen = false;
        SigWhite = false;
        SigBlue = false;
    } else if (ProgRunningIn == true && ProgPausedIn == false && LaserRunningIn == true && EstopIn == false) {
        SigRed = false;
        SigYellow = true;
        SigGreen = false;
        SigBlue = true;
        SigWhite = false;
    } else if (EstopIn == true) {
        SigRed = true;
        SigYellow = false;
        SigGreen = false;
        SigBlue = false;
        SigWhite = false;

    }
}
