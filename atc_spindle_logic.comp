/********************************************************************************
atc_spindle_logic.comp

userspace component

*********************************************************************************/

component atc_spindle_logic                 "This component services Travis' ATC Spindle";

pin in bit vfd_forward_in              "if high, vfd is in forward";
pin in unsigned spind_rpm_in                "tach signal from spindle";
pin in bit spind_stopped_in                "if high, spindle is stopped";
pin in bit spind_button_in               "reads the spindle button, provide debounce in HAL";
pin in bit spind_gcode_unlock_in            "reads from the gcode opperated pin to open or close the tool lock"

pin out bit spind_unlock_out                   "turn on spindle unlock relay";


option singleton yes;               // makes no sense to have more than one of these components running
option userspace yes;

author "Travis Farmer";
license "GPL";
;;

#include <stdio.h>    /* Standard input/output definitions */
#include <stdlib.h>
#include <stdint.h>   /* Standard types */
#include <string.h>   /* String function definitions */
#include <unistd.h>   /* UNIX standard function definitions */
#include <errno.h>    /* Error number definitions */
#include <sys/ioctl.h>
#include <inttypes.h>

void user_mainloop(void)
{
    bool spind_button_toggle_state = false;
    bool spind_button_pressed_state = false;
    bool spind_gcode_unlock_state = false;
    while(true)
        {
            // ************************************************************************************
            // IT DOESN'T MATTER IF THERE ARE NO OTHER INSTANCES ie SINGLETON, MUST USE THIS MACRO
            // In this case, if you don't, no data gets written
            // ************************************************************************************
        FOR_ALL_INSTS()
        {
            if (vfd_forward_in == 0 && spind_stopped_in == 1) {
                if (spind_button_in == 1 && spind_button_pressed_state == false) {
                    spind_button_pressed_state = true;
                } else if (spind_button_in == 0 && spind_button_pressed_state == true) {
                    spind_button_pressed_state = false;
                    // only toggle when button released
                    if (spind_button_toggle_state == false) {
                        spind_button_toggle_state = true;
                    } else {
                        spind_button_toggle_state = false;
                    }
                }
            } else if (vfd_forward_in == 1 && spind_button_toggle_state == true) {
                spind_button_toggle_state = false; // kick off the toggle if spindle starts
            }

            if (vfd_forward_in == 0 && spind_stopped_in == 1) {
                if (spind_gcode_unlock_in == 1 && spind_gcode_unlock_state == false) {
                    spind_gcode_unlock_state = true;
                } else if (spind_gcode_unlock_in == 0 && spind_gcode_unlock_state == true) {
                    spind_gcode_unlock_state = false;
                }
            } else if (vfd_forward_in == 1 && spind_gcode_unlock_state == true) {
                spind_gcode_unlock_state = false; // kick off the unlock state if spindle starts
            }

            if (spind_button_toggle_state == true || spind_gcode_unlock_state == true) {
                spind_unlock_out = 1;
            } else {
                spind_unlock_out = 0;
            }
        }
    }
    exit(0);
}
